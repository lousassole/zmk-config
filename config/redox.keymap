/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // --------------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |  4  |  5  |                   ---                |  6    |  7    |  8    |  9   | 0  |    BKSP   |
            // | TAB   |  Q  |  W  |   E   |  R  |  T  |   (   |           ---        |  )    |  Y    |  U    |  I    |  O   | P  |     -     |
            // | CTRL  |  A  |  S  |   D   |  F  |  G  |   [   |           ---        |  ]    |  H    |  J    |  K    |  L   | ;  |     '     |
            // | SHIFT |  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN | --- | HOME | END   |  N    |  M    |  ,    |  .   | /  | SHFT(RET) |
            // | CRTL  | ALT | GUI | LOWER |    GUI    | LOWER | SPACE   | --- | DEL  | SPACE |     RAISE     | LEFT  | DOWN | UP |   RIGHT   |

            bindings = <
&kp ESC     &kp N1   &kp N2   &kp N3        &kp N4     &kp N5                                                                       &kp N6  &kp N7     &kp N8         &kp N9   &kp N0     &kp BACKSPACE
&kp TAB     &kp Q    &kp W    &kp E         &kp R      &kp T   &kp LEFT_WIN                                          &tog 1         &kp Y   &kp U      &kp I          &kp O    &kp P      &kp MINUS
&kp CLCK    &kp A    &kp S    &kp D         &kp F      &kp G   &kp F23                                               &kp F24        &kp H   &kp J      &kp K          &kp L    &kp SEMI   &kp APOSTROPHE
&kp LSHIFT  &kp Z    &kp X    &kp C         &kp V      &kp B   &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &kp PAGE_UP    &kp PAGE_DOWN  &kp N   &kp M      &kp COMMA      &kp DOT  &kp SLASH  &kp RIGHT_SHIFT
&kp LCTRL   &kt F17  &kp F18  &kp LEFT_ALT  &kp SPACE          &kp LEFT_SHIFT    &kp ENTER            &kp BACKSPACE  &kp ENTER              &kp SPACE  &kp RIGHT_ALT  &kp F19  &kp F20    &kp RCTRL
            >;
        };

        lower_layer {
            // --------------------------------------------------------------------------------------------------------------------------
            // | ESC   |  1  |  2  |   3   |   4   |  5  |                   ---              |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | ESC   |  1  |  2  |   3   |   4   |  5  |   (   |           ---        |  )  |  6  |  7  |   8  |  9   |  0  |  DEL  |
            // | CTRL  |  -  |  =  |   [   |   ]   |  \  |   [   |           ---        |  ]  |  *  |  4  |   5  |  6   |  +  |   -   |
            // | SHIFT | ESC | GUI | COPY  | PASTE |     | PG_UP | PG_DOWN | --- | HOME | END |  \  |  1  |   2  |  3   | RET |  RET  |
            // | CRTL  | ALT | GUI | LOWER |     GUI     | LOWER | SPACE   | --- | DEL  |  0  |    RAISE  | LEFT | DOWN | UP  | RIGHT |

            bindings = <
&rgb_ug RGB_SAI  &kp F1           &kp F2     &kp F3     &kp F4           &kp F5                                                                                                               &kp F6           &kp F7           &kp F8           &kp F9           &kp F10         &kp BACKSPACE
&rgb_ug RGB_SAD  &kp F11          &kp F12    &kp F13    &kp F14          &kp F15    &bt BT_NXT                                                             &tog 0                             &kp F16          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMLOCK  &none
&rgb_ug RGB_HUI  &kp MINUS        &kp EQUAL  &kp LBKT   &kp RBKT         &kp BSLH   &out OUT_TOG                                                           &none                              &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS     &none
&rgb_ug RGB_HUD  &rgb_ug RGB_TOG  &kp LGUI   &kp LC(C)  &kp LC(V)        &kp GRAVE  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD    &rgb_ug RGB_COLOR_HSB(106,100,50)  &rgb_ug RGB_COLOR_HSB(298,100,50)  &kp KP_DIVIDE    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_MINUS    &none
&rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans     &trans     &rgb_ug RGB_TOG             &rgb_ug RGB_EFR  &rgb_ug RGB_EFF    &trans                             &kp ENTER                                           &kp KP_NUMBER_0  &trans           &trans           &trans          &trans
            >;
        };
    };
};
